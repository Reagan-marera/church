"""Add user_id to Transaction model

Revision ID: e71b2d2ce83f
Revises: 94086671ede3
Create Date: 2025-03-26 23:56:19.649162
"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'e71b2d2ce83f'
down_revision = '94086671ede3'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('transaction', schema=None) as batch_op:
        # Add user_id column as nullable first
        batch_op.add_column(sa.Column('user_id', sa.Integer(), nullable=True))
        
        # Create the foreign key constraint
        batch_op.create_foreign_key('fk_user_transaction', 'user', ['user_id'], ['id'])
    
    # Now, update all existing rows to set a default user_id
    # Use double quotes to escape the reserved word "transaction"
    op.execute('UPDATE "transaction" SET user_id = 1 WHERE user_id IS NULL')  # example: update to user_id = 1 or whatever default makes sense
    
    # After the rows are updated, alter the column to be non-nullable
    with op.batch_alter_table('transaction', schema=None) as batch_op:
        batch_op.alter_column('user_id', nullable=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('transaction', schema=None) as batch_op:
        batch_op.drop_constraint('fk_user_transaction', type_='foreignkey')
        batch_op.drop_column('user_id')
    # ### end Alembic commands ###
